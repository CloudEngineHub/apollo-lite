syntax = "proto2";

package apollo.drivers.nano_radar;

import "modules/common_msgs/sensor_msgs/nano_radar.proto";
import "modules/common_msgs/drivers_msgs/can_card_parameter.proto";

message CanConf {
  optional apollo.drivers.canbus.CANCardParameter can_card_parameter = 1;
  optional bool enable_debug_mode = 2 [default = false];
  optional bool enable_receiver_log = 3 [default = false];
  optional bool enable_sender_log = 4 [default = false];
}

message RadarConf {
  optional bool max_distance_valid = 1 [default = false];
  optional bool sensor_id_valid = 2 [default = false];
  optional bool radar_power_valid = 3 [default = false];
  optional bool output_type_valid = 4 [default = true];
  optional bool send_quality_valid = 5 [default = true];
  optional bool send_ext_info_valid = 6 [default = true];
  optional bool sort_index_valid = 7 [default = false];
  optional bool store_in_nvm_valid = 8 [default = true];
  optional bool rcs_threshold_valid = 9 [default = true];
  optional bool baudrate_valid = 10 [default = true];
  optional bool collision_detection_coordinates_valid = 12 [default = true];
  optional bool collision_detection_activation_valid = 13 [default = true];

  optional uint32 max_distance = 14 [default = 160];
  optional uint32 sensor_id = 15 [default = 0];
  optional NanoRadarState_201.OutputType output_type = 16
      [default = OUTPUT_TYPE_OBJECTS];
  optional uint32 radar_power = 17 [default = 0];
  optional bool send_ext_info = 19 [default = true];
  optional bool send_quality = 20 [default = true];
  optional NanoRadarState_201.SortIndex sort_index = 21
      [default = SORT_INDEX_NO_SORTING];
  optional uint32 store_in_nvm = 22 [default = 1];
  optional NanoRadarState_201.RcsThreshold rcs_threshold = 23
      [default = RCS_THRESHOLD_STANDARD];
  optional NanoRadarState_201.CANBaudrate baudrate = 24
      [default = CAN_BAUDRATE_500K];
  optional uint32 region_max_output_number = 25 [default = 63];
  optional uint32 region_id = 26 [default = 1];
  optional double point1_longitude = 27 [default = 0];
  optional double point1_lateral = 28 [default = 50];
  optional double point2_longitude = 29 [default = 20];
  optional double point2_lateral = 30 [default = -50];

  optional uint64 input_send_interval = 31;
  // for 0x400 collision detection config
  optional bool coll_det_cfg_warning_reset = 32 [default = false];
  optional bool coll_det_cfg_activation = 33 [default = true];
  optional bool coll_det_cfg_min_time_valid = 34 [default = false];
  optional bool coll_det_cfg_clear_regions = 35 [default = false];
  // unit: seconds, resolution: 0.1 seconds, min: 0.0, max: 25.5
  optional double coll_det_cfg_min_detect_time = 36 [default = 0];

  // for 0x200 radar config, add additional fields
  optional bool interface_select_valid = 37 [default = false];
  optional bool lvds_valid = 38 [default = false];
  optional bool calibration_valid = 39 [default = false];
  optional uint32 interface_type = 40 [default = 0];
  optional bool lvds_select = 41 [default = false];
  optional NanoRadarState_201.CalibrationEnabled calibration_enabled = 42
      [default = CALIBRATION_ENABLED_ENABLED];
}

message NanoRadarConf {
  optional CanConf can_conf = 1;
  optional RadarConf radar_conf = 2;
  optional string radar_channel = 3;
}
