syntax = "proto2";

package apollo.canbus;

message Ctrl_cmd_18c4d2d0 {
// Control Message
  // [] [0|0]
  optional int32 ctrl_cmd_check_bcc = 1;
  // [] [0|0]
  optional int32 ctrl_cmd_alive_cnt = 2;
  // [] [0|127]
  optional int32 ctrl_cmd_brake = 3;
  // [] [0|0]
  optional double ctrl_cmd_steering = 4;
  // [] [0|0]
  optional double ctrl_cmd_velocity = 5;
  // [] [0|0]
  optional int32 ctrl_cmd_gear = 6;
}

message Ctrl_fb_18c4d2ef {
// Report Message
  // [] [0|0]
  optional bool ctrl_fb_remotest = 1;
  // [] [0|0]
  optional int32 ctrl_fb_check_bcc = 2;
  // [] [0|0]
  optional int32 ctrl_fb_alive_cnt = 3;
  // [] [0|0]
  optional int32 ctrl_fb_mode = 4;
  // [] [0|0]
  optional int32 ctrl_fb_brake = 5;
  // [] [0|0]
  optional double ctrl_fb_steering = 6;
  // [] [0|0]
  optional double ctrl_fb_velocity = 7;
  // [] [0|0]
  optional int32 ctrl_fb_gear = 8;
}

message Io_cmd_18c4d7d0 {
// Control Message
  // [] [0|0]
  optional bool io_cmd_discharge = 1;
  // [] [0|0]
  optional int32 io_cmd_check_bcc = 2;
  // [] [0|0]
  optional int32 io_cmd_alive_cnt = 3;
  // [] [0|0]
  optional bool io_cmd_speaker = 4;
  // [] [0|0]
  optional bool io_cmd_fog_lamp = 5;
  // [] [0|0]
  optional bool io_cmd_clearance_lamp = 6;
  // [] [0|0]
  optional bool io_cmd_braking_lamp = 7;
  // [] [0|0]
  optional int32 io_cmd_turn_lamp = 8;
  // [] [0|0]
  optional bool io_cmd_upper_beam_headlamp = 9;
  // [] [0|0]
  optional bool io_cmd_lower_beam_headlamp = 10;
  // [] [0|0]
  optional bool io_cmd_enable = 11;
}

message Lr_wheel_fb_18c4d7ef {
// Report Message
  // [] [0|0]
  optional int32 lr_wheel_fb_check_bcc = 1;
  // [] [0|0]
  optional int32 lr_wheel_fb_alive_cnt = 2;
  // [] [0|0]
  optional int32 lr_wheel_fb_pulse = 3;
  // [] [0|0]
  optional double lr_wheel_fb_velocity = 4;
}

message Rr_wheel_fb_18c4d8ef {
// Report Message
  // [] [0|0]
  optional double rr_wheel_fb_velocity = 1;
  // [] [0|0]
  optional int32 rr_wheel_fb_pulse = 2;
  // [] [0|0]
  optional int32 rr_wheel_fb_check_bcc = 3;
  // [] [0|0]
  optional int32 rr_wheel_fb_alive_cnt = 4;
}

message Io_fb_18c4daef {
// Report Message
  // [] [0|0]
  optional bool io_fb_scramst = 1;
  // [] [0|0]
  optional bool io_fb_chargeen = 2;
  // [] [0|0]
  optional bool io_fb_dischargeflg = 3;
  // [] [0|0]
  optional int32 io_fb_check_bcc = 4;
  // [] [0|0]
  optional int32 io_fb_alive_cnt = 5;
  // [] [0|0]
  optional bool io_fb_rr_drop_sensor = 6;
  // [] [0|0]
  optional bool io_fb_rm_drop_sensor = 7;
  // [] [0|0]
  optional bool io_fb_rl_drop_sensor = 8;
  // [] [0|0]
  optional bool io_fb_fr_drop_sensor = 9;
  // [] [0|0]
  optional bool io_fb_fm_drop_sensor = 10;
  // [] [0|0]
  optional bool io_fb_fl_drop_sensor = 11;
  // [] [0|0]
  optional bool io_fb_rr_impact_sensor = 12;
  // [] [0|0]
  optional bool io_fb_rm_impact_sensor = 13;
  // [] [0|0]
  optional bool io_fb_rl_impact_sensor = 14;
  // [] [0|0]
  optional bool io_fb_fr_impact_sensor = 15;
  // [] [0|0]
  optional bool io_fb_fm_impact_sensor = 16;
  // [] [0|0]
  optional bool io_fb_fl_impact_sensor = 17;
  // [] [0|0]
  optional bool io_fb_speaker = 18;
  // [] [0|0]
  optional bool io_fb_fog_lamp = 19;
  // [] [0|0]
  optional bool io_fb_clearance_lamp = 20;
  // [] [0|0]
  optional bool io_fb_braking_lamp = 21;
  // [] [0|0]
  optional int32 io_fb_turn_lamp = 22;
  // [] [0|0]
  optional bool io_fb_upper_beam_headlamp = 23;
  // [] [0|0]
  optional bool io_fb_lower_beam_headlamp = 24;
  // [] [0|0]
  optional bool io_fb_enable = 25;
}

message Odo_fb_18c4deef {
// Report Message
  // [] [0|0]
  optional double odo_fb_accumulative_angular = 1;
  // [] [0|0]
  optional double odo_fb_accumulative_mileage = 2;
}

message Bms_infor_18c4e1ef {
// Report Message
  // [] [0|0]
  optional int32 bms_infor_check_bcc = 1;
  // [] [0|0]
  optional int32 bms_infor_alive_cnt = 2;
  // [] [0|0]
  optional double bms_infor_remaining_capacity = 3;
  // [] [0|0]
  optional double bms_infor_current = 4;
  // [] [0|0]
  optional double bms_infor_voltage = 5;
}

message Bms_flag_infor_18c4e2ef {
// Report Message
  // [] [0|0]
  optional bool bms_flag_infor_soclowprotection = 1;
  // [] [0|0]
  optional int32 bms_flag_infor_check_bcc = 2;
  // [] [0|0]
  optional int32 bms_flag_infor_alive_cnt = 3;
  // [] [0|0]
  optional bool bms_flag_infor_socwarning = 4;
  // [] [0|0]
  optional double bms_flag_infor_low_temperature = 5;
  // [] [0|0]
  optional double bms_flag_infor_hight_temperature = 6;
  // [] [0|0]
  optional int32 bms_flag_infor_charge_st = 7;
  // [] [0|0]
  optional bool bms_flag_infor_lock_mos = 8;
  // [] [0|0]
  optional bool bms_flag_infor_ic_error = 9;
  // [] [0|0]
  optional bool bms_flag_infor_short = 10;
  // [] [0|0]
  optional bool bms_flag_infor_discharge_oc = 11;
  // [] [0|0]
  optional bool bms_flag_infor_charge_oc = 12;
  // [] [0|0]
  optional bool bms_flag_infor_discharge_ut = 13;
  // [] [0|0]
  optional bool bms_flag_infor_discharge_ot = 14;
  // [] [0|0]
  optional bool bms_flag_infor_charge_ut = 15;
  // [] [0|0]
  optional bool bms_flag_infor_charge_ot = 16;
  // [] [0|0]
  optional bool bms_flag_infor_uv = 17;
  // [] [0|0]
  optional bool bms_flag_infor_ov = 18;
  // [] [0|0]
  optional bool bms_flag_infor_single_uv = 19;
  // [] [0|0]
  optional bool bms_flag_infor_single_ov = 20;
  // [] [0|0]
  optional int32 bms_flag_infor_soc = 21;
}

message Ultrasonic_1_fb_18c4e8ef {
// Report Message
  // [] [0|0]
  optional int32 ultrasonic_fb_01_check_bcc = 1;
  // [] [0|0]
  optional int32 ultrasonic_fb_01_alive_cnt = 2;
  // [mm] [0|0]
  optional int32 ultrasonic_fb_04 = 3;
  // [mm] [0|0]
  optional int32 ultrasonic_fb_03 = 4;
  // [mm] [0|0]
  optional int32 ultrasonic_fb_02 = 5;
  // [mm] [0|0]
  optional int32 ultrasonic_fb_01 = 6;
}

message Ultrasonic_2_fb_18c4e9ef {
// Report Message
  // [] [0|0]
  optional int32 ultrasonic_fb_02_check_bcc = 1;
  // [] [0|0]
  optional int32 ultrasonic_fb_02_alive_cnt = 2;
  // [mm] [0|0]
  optional int32 ultrasonic_fb_08 = 3;
  // [mm] [0|0]
  optional int32 ultrasonic_fb_07 = 4;
  // [mm] [0|0]
  optional int32 ultrasonic_fb_06 = 5;
  // [mm] [0|0]
  optional int32 ultrasonic_fb_05 = 6;
}

message Veh_fb_diag_18c4eaef {
// Report Message
  // [] [0|0]
  optional int32 veh_fb_rdrvmcufault = 1;
  // [] [0|0]
  optional int32 veh_fb_ldrvmcufault = 2;
  // [] [0|0]
  optional bool veh_fb_ehboilfault = 3;
  // [] [0|0]
  optional bool veh_fb_ehboilpresssensorfault = 4;
  // [] [0|0]
  optional bool veh_fb_ehbmotorfault = 5;
  // [] [0|0]
  optional bool veh_fb_ehbsensorabnomal = 6;
  // [] [0|0]
  optional bool veh_fb_ehbpowerfault = 7;
  // [] [0|0]
  optional bool veh_fb_ehbot = 8;
  // [] [0|0]
  optional bool veh_fb_ehbangulefault = 9;
  // [] [0|0]
  optional bool veh_fb_ehbdisen = 10;
  // [] [0|0]
  optional bool veh_fb_ehbworkmodelfault = 11;
  // [] [0|0]
  optional bool veh_fb_epsovercurrent = 12;
  // [] [0|0]
  optional bool veh_fb_epsdiswork = 13;
  // [] [0|0]
  optional bool veh_fb_epswarning = 14;
  // [] [0|0]
  optional bool veh_fb_auxremotedisonline = 15;
  // [] [0|0]
  optional bool veh_fb_auxremoteclose = 16;
  // [] [0|0]
  optional bool veh_fb_auxbmsdisonline = 17;
  // [] [0|0]
  optional bool veh_fb_autoiocancmd = 18;
  // [] [0|0]
  optional bool veh_fb_autocanctrlcmd = 19;
  // [] [0|0]
  optional int32 veh_fb_infor_check_bcc = 20;
  // [] [0|0]
  optional int32 veh_fb_infor_alive_cnt = 21;
  // [] [0|0]
  optional bool veh_fb_auxscram = 22;
  // [] [0|0]
  optional bool veh_fb_ehbdisonline = 23;
  // [] [0|0]
  optional bool veh_fb_ehbecufault = 24;
  // [] [0|0]
  optional bool veh_fb_epsmosfetot = 25;
  // [] [0|0]
  optional bool veh_fb_epsfault = 26;
  // [] [0|0]
  optional bool veh_fb_epsdisonline = 27;
  // [] [0|0]
  optional int32 veh_fb_faultlevel = 28;
}

message Sensor_reset_18ffffff {
// Control Message
  // [] [-128|127]
  optional int32 close_candiag = 1;
  // [] [0|0]
  optional bool brake_reset = 2;
  // [] [0|0]
  optional bool steer_reset = 3;
}

message Mk_mini {
  optional Ctrl_cmd_18c4d2d0 ctrl_cmd_18c4d2d0 = 1; // control message
  optional Ctrl_fb_18c4d2ef ctrl_fb_18c4d2ef = 2; // report message
  optional Io_cmd_18c4d7d0 io_cmd_18c4d7d0 = 3; // control message
  optional Lr_wheel_fb_18c4d7ef lr_wheel_fb_18c4d7ef = 4; // report message
  optional Rr_wheel_fb_18c4d8ef rr_wheel_fb_18c4d8ef = 5; // report message
  optional Io_fb_18c4daef io_fb_18c4daef = 6; // report message
  optional Odo_fb_18c4deef odo_fb_18c4deef = 7; // report message
  optional Bms_infor_18c4e1ef bms_infor_18c4e1ef = 8; // report message
  optional Bms_flag_infor_18c4e2ef bms_flag_infor_18c4e2ef = 9; // report message
  optional Ultrasonic_1_fb_18c4e8ef ultrasonic_1_fb_18c4e8ef = 10; // report message
  optional Ultrasonic_2_fb_18c4e9ef ultrasonic_2_fb_18c4e9ef = 11; // report message
  optional Veh_fb_diag_18c4eaef veh_fb_diag_18c4eaef = 12; // report message
  optional Sensor_reset_18ffffff sensor_reset_18ffffff = 13; // control message
}
